{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","style","color","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Header","state","navbarOpen","css","links","id","path","text","navbarHandler","_this","setState","className","gatsby_link_default","to","padding","margin","src","logo","alt","type","onClick","this","map","link","key","Component","Layout","_ref","gatsby_browser_entry_StaticQuery","Fragment","header","siteTitle","site","siteMetadata","maxWidth","paddingTop","Date","getFullYear","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-2b8b9440cf412f323234.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p style={{color:\"black\"}}>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport React, { Component } from \"react\"\nimport logo from \"../images/logo.png\"\n\n\nclass Header extends Component {\n\n  state = { navbarOpen:false,\n            css:'collapse navbar-collapse',\n            links: [\n                {\n                  id:1,\n                  path:'/',\n                  text:'home'\n                },\n              {\n                id:2,\n                path:'/photos',\n                text:'pictures'\n              },\n              {\n                id:3,\n                path:'/about',\n                text:'about'\n              },\n              {\n                id:4,\n                path:'/contact',\n                text:'contact'\n              }\n            ]\n   };\n\n   navbarHandler = () => {\n      this.state.navbarOpen?\n      this.setState(\n        {navbarOpen:false,css:\"collapse navbar-collapse\"})\n        : this.setState(\n          {navbarOpen:true,css:\"collapse navbar-collapse show\"});\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm bg-light navbar-light\">\n        <Link\n          to=\"/\"\n          className=\"navbar-brand\"\n          style={{ padding: 30 }} \n        >\n        <img style={{ margin: 0 }} src={logo} alt=\"logo\"/>\n        </Link>\n        <button className=\"navbar-toggler\" type=\"button\" onClick={this.navbarHandler}>\n            <span className=\"navbar-toggler-icon\" />\n        </button> \n        <div className={this.state.css}>\n             <ul className=\"navbar-nav max-auto\" style={{ margin:\"auto\"}}>\n              {this.state.links.map(link => {\n                return (\n                  <li key={link.id} className=\"nav-item\">\n                  <Link to={link.path} className=\"nav-link text-capitalize\">\n                    {link.text}\n                  </Link>\n                  </li>\n                )\n              })\n              }\n             </ul>\n      </div>\n    </nav>\n    )\n  }\n} \n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"./bootstrap.min.css\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 1080,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n        <footer className=\"footer py-3\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-10 mx-auto col-md-6 text-yellow text-center text-capitalize\">\n           <h5>All rights reserved © {new Date().getFullYear()}</h5> \n              </div>\n            </div>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-e45dfa216dc978653074a267d0e7e602.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}